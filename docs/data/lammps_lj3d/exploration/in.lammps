# Equilibrium MD simulation of Lennard-Jones fluid in 3D: exploration

# This is a preliminary simulation to get a gist of the relevant time scales
# and determine the required simulation settings for a longer production run.
# All data is stored and no efforts are made to reduce the output because the simulation is short.

# Reduced Lennard-Jones units are used throughout.
# The system is first equilibrated with two NVT runs, followed by an NVE production run.

echo            none
units           lj

# 1. Simulation settings
# ----------------------

# These settings are based on the choices in
# https://doi.org/10.1063/1.1770695

# Number of FCC cells in each direction, results in 1372 atoms.
variable        nrepx equal 7
variable        nrepy equal 7
variable        nrepz equal 7

# This point is close to the critical point and thus features slowly decaying correlation functions,
# making it challenging to converge transport properties.
variable        density equal 0.8442
variable        temperature1 equal 1.5  # High temperature for melting
variable        temperature2 equal 0.722
variable        cutoff_radius equal 2.5

# Time-related settings
variable        timestep equal 0.003
variable        nvt_tau equal 0.5
variable        nvt_steps equal 10000
variable        nve_steps equal 50000

# 2. System setup in LAMMPS
# -------------------------

# Initial geometry
lattice         fcc ${density}
region          box block 0 ${nrepx} 0 ${nrepy} 0 ${nrepz}
create_box      1 box
create_atoms    1 box
mass            1 1.0

# Initial velocities
velocity        all create ${temperature1} 42

# Lennar-Jones potential
pair_style      lj/cut ${cutoff_radius}
pair_coeff      1 1 1.0 1.0
neighbor        0.3 bin
neigh_modify    delay 0 every 10

# MD settings
timestep        ${timestep}

# Print a few settings and system parameters to a YAML file for ease of post-processing
print """
lammps_version: $(version)
volume: $(vol)
density: ${density}
temperature: ${temperature2}
cutoff_radius: ${cutoff_radius}
timestep: ${timestep}
nstep: ${nve_steps}
""" file info.yaml screen no


# 3. NVT Equilibration runs
# -------------------------

# Convenient progress information
thermo          100
thermo_style    custom step time temp press pe ke etotal cpuremain

# Dump images for a quick visual sanity check
dump            vis all image ${nvt_steps} nvt_*.png type type

# High temperature to efficiently melt the fcc lattice
fix             1 all nvt temp ${temperature1} ${temperature1} ${nvt_tau}
run             ${nvt_steps}
unfix           1

# Target temperature to equilibrate the system
velocity        all scale ${temperature2}
velocity        all zero linear
fix             1 all nvt temp ${temperature2} ${temperature2} ${nvt_tau}
run             ${nvt_steps}
unfix           1
undump          vis
velocity        all scale ${temperature2}
velocity        all zero linear

# 4. NVE Production run
# ---------------------

# Note that the `fix print` commands intentionally mimic the output of `fix ave/time`,
# so they can be loaded with the same post-processing scripts.

reset_timestep  0
fix             1 all nve

# Thermo output
fix             2 all print 1 &
                "$(step) $(c_thermo_temp:%12.5e) $(ke:%12.5e) $(pe:%12.5e)" &
                file nve_thermo.txt screen no

# Pressure output (xx, yy, zz, xy, xz, yz)
fix             3 all print 1 &
"$(step) $(c_thermo_press[1]:%12.5e) $(c_thermo_press[2]:%12.5e) $(c_thermo_press[3]:%12.5e) &
$(c_thermo_press[4]:%12.5e) $(c_thermo_press[5]:%12.5e) $(c_thermo_press[6]:%12.5e)" &
                file nve_pressure.txt screen no

# Heat flux output
compute         atom_ke all ke/atom
compute         atom_pe all pe/atom
compute         atom_stress all stress/atom NULL virial
compute         flux all heat/flux atom_ke atom_pe atom_stress
fix             4 all print 1 &
                "$(step) $(c_flux[1]:%12.5e) $(c_flux[2]:%12.5e) $(c_flux[3]:%12.5e)" &
                file nve_heatflux.txt screen no

# Dump images for a quick visual sanity check
dump            vis all image ${nve_steps} nve_*.png type type

# Run the production simulation
run             ${nve_steps}

# Write restart file with final state
write_restart   nve_final.restart
