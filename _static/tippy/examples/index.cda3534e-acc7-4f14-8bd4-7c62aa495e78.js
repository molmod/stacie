selector_to_html = {"a[href=\"https://doi.org/10.5281/zenodo.15543902\"]": "\n<div>\n    <h3>Molten salts :</h3>\n    \n    <p><b>Authors:</b> G J Janz, F W Dampier, G R Lakshminarayanan, P K Lorenz, R P T Tomkins</p>\n    \n    <p><b>Publisher:</b> National Bureau of Standards</p>\n    <p><b>Published:</b> 2016-6-25</p>\n</div>", "a[href=\"https://doi.org/10.5281/zenodo.15722903\"]": "\n<div>\n    <h3>Effects of Temperature Control Algorithms on Transport Properties and Kinetics in Molecular Dynamics Simulations</h3>\n    \n    <p><b>Authors:</b> Joseph E. Basconi, Michael R. Shirts</p>\n    \n    <p><b>Publisher:</b> American Chemical Society (ACS)</p>\n    <p><b>Published:</b> 2013-5-17</p>\n</div>", "a[href=\"error_mean.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Uncertainty of the Mean of Time-Correlated Data<a class=\"headerlink\" href=\"#uncertainty-of-the-mean-of-time-correlated-data\" title=\"Link to this heading\">\u00b6</a></h1><p>This notebook shows how to use STACIE to compute the error of the mean\nof a time-correlated input sequence,\nmeaning not all of its values are statistically independent.</p><p>This is a completely self-contained example that generates input sequences\n(with MCMC) and then analyzes them with STACIE.\nAtomic units are used unless otherwise noted.</p>", "a[href=\"surface_diffusion.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Diffusion on a Surface with Newtonian Dynamics<a class=\"headerlink\" href=\"#diffusion-on-a-surface-with-newtonian-dynamics\" title=\"Link to this heading\">\u00b6</a></h1><p>This example shows how to compute the diffusion coefficient\nof a particle adsorbed on a crystal surface.\nFor simplicity, the motion of the adsorbed particle is described\nby Newton\u2019s equations (without thermostat), i.e. in the <a class=\"reference internal\" href=\"../glossary.html#term-NVE\"><span class=\"xref std std-term\">NVE</span></a> ensemble,\nand the particle can only move in two dimensions.</p><p>This is a completely self-contained example that generates the input sequences\n(with numerical integration) and then analyzes them with STACIE.\nUnless otherwise noted, atomic units are used.</p>", "a[href=\"molten_salt.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Ionic Electrical Conductivity of Molten Sodium Chloride at 1100 K (OpenMM)<a class=\"headerlink\" href=\"#ionic-electrical-conductivity-of-molten-sodium-chloride-at-1100-k-openmm\" title=\"Link to this heading\">\u00b6</a></h1><p>This notebook shows how to post-process trajectories from OpenMM simulations\nto calculate the ionic electrical conductivity.\nThe OpenMM trajectories are converted to NPZ files within the Jupyter Notebooks of the simulation,\nmaking the approach here easily adaptable to other codes or physical systems.\nAll OpenMM simulation notebooks can be found in the directory <code class=\"docutils literal notranslate\"><span class=\"pre\">docs/data/openmm_salt</span></code>\nin STACIE\u2019s source repository.\nThe required theoretical background is explained the\n<a class=\"reference internal\" href=\"../properties/electrical_conductivity.html\"><span class=\"std std-doc\">Ionic Electrical Conductivity</span></a> section.</p><p>The MD simulations are performed using the Born-Huggins-Mayer-Tosi-Fumi potential,\nwhich is a popular choice for molten salts. <span id=\"id1\">[<a class=\"reference internal\" href=\"../references.html#id49\" title=\"M.P. Tosi and F.G. Fumi. Ionic sizes and born repulsive parameters in the nacl-type alkali halides\u2014ii: the generalized huggins-mayer form. J. Phys. Chem. Solids, 25(1):45-52, 1964. doi:10.1016/0022-3697(64)90160-X.\">TF64</a>]</span>\nThis potential does not use mixing rules and it is not natively implemented in OpenMM,\nbut it can be incorporated using the <code class=\"docutils literal notranslate\"><span class=\"pre\">CustomNonbondedForce</span></code> and some creativity,\nsee <code class=\"docutils literal notranslate\"><span class=\"pre\">docs/data/openmm_salt/bhmft.py</span></code> in the Git repository.\nThe molten salt was simulated with a 3D periodic box of 1728 ions (864 Na<span class=\"math notranslate nohighlight\">\\(^+\\)</span> and 864 Cl<span class=\"math notranslate nohighlight\">\\(^-\\)</span>).\nThe time step in all simulations was 5 fs.</p>", "a[href=\"lj_bulk_viscosity.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Bulk Viscosity of a Lennard-Jones Liquid Near the Triple Point (LAMMPS)<a class=\"headerlink\" href=\"#bulk-viscosity-of-a-lennard-jones-liquid-near-the-triple-point-lammps\" title=\"Link to this heading\">\u00b6</a></h1><p>This example demonstrates how to compute the bulk viscosity\nof a Lennard-Jones liquid near its triple point using LAMMPS.\nIt uses the same production runs and conventions\nas in the <a class=\"reference internal\" href=\"lj_shear_viscosity.html\"><span class=\"std std-doc\">Shear viscosity example</span></a>.\nThe required theoretical background is explained the section\n<a class=\"reference internal\" href=\"../properties/bulk_viscosity.html\"><span class=\"std std-doc\">Bulk Viscosity</span></a>.\nIn essence, it is computed in the same way as the shear viscosity,\nexcept that the isotropic pressure fluctuations are used as input.</p>", "a[href=\"minimal.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Minimal Example<a class=\"headerlink\" href=\"#minimal-example\" title=\"Link to this heading\">\u00b6</a></h1><p>The main goal of this example is to demonstrate how to use STACIE\nwith a minimal, self-contained example.\nFirst, the properties of a basic Markov process are discussed,\nand then data is generated using this process.\n(A detailed derivation of the analytical results is provided in the last section.)\nThe Markov chains are analyzed using\ntwo <a class=\"reference internal\" href=\"../theory/model.html\"><span class=\"std std-doc\">models</span></a>,\nfollowed by some comments on their applicability.</p><p>A secondary goal is to thoroughly discuss the plots generated by STACIE,\nwhich can help detect problems with the analysis or input data.</p>", "a[href=\"lj_thermal_conductivity.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Thermal Conductivity of a Lennard-Jones Liquid Near the Triple Point (LAMMPS)<a class=\"headerlink\" href=\"#thermal-conductivity-of-a-lennard-jones-liquid-near-the-triple-point-lammps\" title=\"Link to this heading\">\u00b6</a></h1><p>This example shows how to derive the thermal conductivity\nusing heat flux data from a LAMMPS simulation.\nIt uses the same production runs and conventions\nas in the <a class=\"reference internal\" href=\"lj_shear_viscosity.html\"><span class=\"std std-doc\">Shear viscosity example</span></a>.\nThe required theoretical background is explained the section\n<a class=\"reference internal\" href=\"../properties/thermal_conductivity.html\"><span class=\"std std-doc\">Thermal Conductivity</span></a>.</p>", "a[href=\"applicability.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Applicability of the Lorentz Model<a class=\"headerlink\" href=\"#applicability-of-the-lorentz-model\" title=\"Link to this heading\">\u00b6</a></h1><p>STACIE\u2019s <a class=\"reference internal\" href=\"../theory/model.html#section-lorentz-target\"><span class=\"std std-ref\">Lorentz model</span></a> assumes that\nthe autocorrelation function decays exponentially for large lag times.\nNot all dynamical systems exhibit this exponential relaxation.\nIf you want to apply STACIE to systems without exponential relaxation,\nyou can use the <a class=\"reference internal\" href=\"../theory/model.html#section-exppoly-target\"><span class=\"std std-ref\">exppoly model</span></a> instead.</p><p>To illustrate the applicability of the Lorentz model,\nthis notebook applies STACIE to numerical solutions of\n<a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Thomas%27_cyclically_symmetric_attractor\">Thomas\u2019 Cyclically Symmetric Attractor</a>:</p>", "a[href=\"lj_shear_viscosity.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Shear Viscosity of a Lennard-Jones Liquid Near the Triple Point (LAMMPS)<a class=\"headerlink\" href=\"#shear-viscosity-of-a-lennard-jones-liquid-near-the-triple-point-lammps\" title=\"Link to this heading\">\u00b6</a></h1><p>This example shows how to calculate viscosity of argon\nfrom pressure tensor data obtained from <a class=\"reference internal\" href=\"../glossary.html#term-LAMMPS\"><span class=\"xref std std-term\">LAMMPS</span></a> <a class=\"reference internal\" href=\"../glossary.html#term-MD\"><span class=\"xref std std-term\">MD</span></a> simulations.\nThe required theoretical background is explained the\n<a class=\"reference internal\" href=\"../properties/shear_viscosity.html\"><span class=\"std std-doc\">Shear Viscosity</span></a> section.\nThe same simulations are also used for the <a class=\"reference internal\" href=\"lj_bulk_viscosity.html\"><span class=\"std std-doc\">bulk viscosity</span></a>\nand <a class=\"reference internal\" href=\"lj_thermal_conductivity.html\"><span class=\"std std-doc\">thermal conductivity</span></a> examples in the following two notebooks.\nThe goal of the argon examples is to derive the three transport properties\nwith a relative error smaller than those found in the literature.</p><p>All argon MD simulations use the\n<a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Lennard-Jones_potential\">Lennard-Jones potential</a>\nwith reduced Lennard-Jones units.\nFor example, the reduced unit of viscosity is denoted as \u03b7*,\nand the reduced unit of time as \u03c4*.\nThe simulated system consists of 1372 argon atoms.\nThe thermodynamic state <span class=\"math notranslate nohighlight\">\\(\\rho=0.8442\\,\\mathrm{\\rho}^*\\)</span> and <span class=\"math notranslate nohighlight\">\\(T=0.722\\,\\mathrm{T}^*\\)</span>\ncorresponds to a liquid phase near the triple point\n(<span class=\"math notranslate nohighlight\">\\(\\rho=0.0845\\,\\mathrm{\\rho}^*\\)</span> and <span class=\"math notranslate nohighlight\">\\(T=0.69\\,\\mathrm{T}^*\\)</span>).\nThis liquid state is known to exhibit slow relaxation times,\nwhich complicates the convergence of transport properties and\nmakes it a popular test case for computational methods.</p>", "a[href=\"#worked-examples\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Worked Examples<a class=\"headerlink\" href=\"#worked-examples\" title=\"Link to this heading\">\u00b6</a></h1><p>All the examples are also available as Jupyter notebooks and can be downloaded as one ZIP archive here:</p>", "a[href=\"utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Utility Module for Plots Reused in Multiple Examples.<a class=\"headerlink\" href=\"#utility-module-for-plots-reused-in-multiple-examples\" title=\"Link to this heading\">\u00b6</a></h1>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
