selector_to_html = {"a[href=\"https://en.wikipedia.org/wiki/Log-normal_distribution\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/Log-normal-pdfs.png/330px-Log-normal-pdfs.png\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p>In probability theory, a <b>log-normal</b> (or <b>lognormal</b>) <b>distribution</b> is a continuous probability distribution of a random variable whose logarithm is normally distributed. Thus, if the random variable <span class=\"texhtml mvar\" style=\"font-style:italic\">X</span> is log-normally distributed, then <span class=\"texhtml \"><i>Y</i> = ln <i>X</i></span> has a normal distribution. Equivalently, if <span class=\"texhtml mvar\" style=\"font-style:italic\">Y</span> has a normal distribution, then the exponential function of <span class=\"texhtml mvar\" style=\"font-style:italic\">Y</span>, <span class=\"texhtml \"><i>X</i> = exp(<i>Y</i>)</span>, has a log-normal distribution. A random variable which is log-normally distributed takes only positive real values. It is a convenient and useful model for measurements in exact and engineering sciences, as well as medicine, economics and other topics (e.g., energies, concentrations, lengths, prices of financial instruments, and other metrics).</p>", "a[href^=\"https://en.wikipedia.org/wiki/Log-normal_distribution#\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/Log-normal-pdfs.png/330px-Log-normal-pdfs.png\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p>In probability theory, a <b>log-normal</b> (or <b>lognormal</b>) <b>distribution</b> is a continuous probability distribution of a random variable whose logarithm is normally distributed. Thus, if the random variable <span class=\"texhtml mvar\" style=\"font-style:italic\">X</span> is log-normally distributed, then <span class=\"texhtml \"><i>Y</i> = ln <i>X</i></span> has a normal distribution. Equivalently, if <span class=\"texhtml mvar\" style=\"font-style:italic\">Y</span> has a normal distribution, then the exponential function of <span class=\"texhtml mvar\" style=\"font-style:italic\">Y</span>, <span class=\"texhtml \"><i>X</i> = exp(<i>Y</i>)</span>, has a log-normal distribution. A random variable which is log-normally distributed takes only positive real values. It is a convenient and useful model for measurements in exact and engineering sciences, as well as medicine, economics and other topics (e.g., energies, concentrations, lengths, prices of financial instruments, and other metrics).</p>", "a[href=\"../apidocs/stacie.model.html#stacie.model.PadeModel\"]": "<dt class=\"sig sig-object py\" id=\"stacie.model.PadeModel\">\n<em class=\"property\"><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">PadeModel</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">numer_degrees</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">denom_degrees</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/stacie/model.html#PadeModel\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt><dd><p>Bases: <a class=\"reference internal\" href=\"#stacie.model.SpectrumModel\" title=\"stacie.model.SpectrumModel\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SpectrumModel</span></code></a></p><p>A rational function model for the spectrum, a.k.a. a Pad\u00e9 approximation.</p></dd>", "a[href=\"#lorentz-model\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">3. Lorentz Model<a class=\"headerlink\" href=\"#lorentz-model\" title=\"Link to this heading\">\u00b6</a></h2><p>The <a class=\"reference internal\" href=\"../apidocs/stacie.model.html#stacie.model.LorentzModel\" title=\"stacie.model.LorentzModel\"><span class=\"xref myst py py-class\">LorentzModel</span></a> is a special case of the Pade model\nwith numerator degrees <span class=\"math notranslate nohighlight\">\\(\\{0, 2\\}\\)</span> and denominator degrees <span class=\"math notranslate nohighlight\">\\(\\{2\\}\\)</span>.\nFor this special case the model is equivalent to:</p>", "a[href=\"../glossary.html#term-ACF\"]": "<dt id=\"term-ACF\">ACF</dt><dd><p>Autocorrelation function.\nA measure of the correlation of a signal with itself at different time lags.</p></dd>", "a[href=\"../apidocs/stacie.model.html#stacie.model.LorentzModel\"]": "<dt class=\"sig sig-object py\" id=\"stacie.model.LorentzModel\">\n<em class=\"property\"><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">LorentzModel</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">relerr_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.1</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/stacie/model.html#LorentzModel\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt><dd><p>Bases: <a class=\"reference internal\" href=\"#stacie.model.PadeModel\" title=\"stacie.model.PadeModel\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PadeModel</span></code></a></p><p>A model for the spectrum with a Lorentzian peak at zero frequency plus some white noise.</p><p>This is a special case of the PadeModel with\n<cite>numer_degrees</cite> = [0, 2] and <cite>denom_degrees</cite> = [2].\nFurthermore, it will only accept parameters that correspond\nto a well-defined exponential correlation time.</p></dd>", "a[href=\"#model-spectrum\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Model Spectrum<a class=\"headerlink\" href=\"#model-spectrum\" title=\"Link to this heading\">\u00b6</a></h1><p>STACIE supports three models for fitting the low-frequency part of the power spectrum.\nIn both models, the value at zero frequency corresponds to the autocorrelation integral.</p>", "a[href=\"#exppoly-model\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">1. ExpPoly Model<a class=\"headerlink\" href=\"#exppoly-model\" title=\"Link to this heading\">\u00b6</a></h2><p>The <a class=\"reference internal\" href=\"../apidocs/stacie.model.html#stacie.model.ExpPolyModel\" title=\"stacie.model.ExpPolyModel\"><span class=\"xref myst py py-class\">ExpPolyModel</span></a> is defined as:</p>", "a[href=\"../apidocs/stacie.model.html#stacie.model.ExpPolyModel\"]": "<dt class=\"sig sig-object py\" id=\"stacie.model.ExpPolyModel\">\n<em class=\"property\"><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">ExpPolyModel</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">degrees</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/stacie/model.html#ExpPolyModel\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt><dd><p>Bases: <a class=\"reference internal\" href=\"#stacie.model.SpectrumModel\" title=\"stacie.model.SpectrumModel\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SpectrumModel</span></code></a></p><p>Exponential function of a linear combination of simple monomials.</p></dd>", "a[href=\"#pade-model\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">2. Pade Model<a class=\"headerlink\" href=\"#pade-model\" title=\"Link to this heading\">\u00b6</a></h2><p>The <a class=\"reference internal\" href=\"../apidocs/stacie.model.html#stacie.model.PadeModel\" title=\"stacie.model.PadeModel\"><span class=\"xref myst py py-class\">PadeModel</span></a> is defined as:</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
