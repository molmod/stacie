selector_to_html = {"a[href=\"../glossary.html#term-NVT\"]": "<dt id=\"term-NVT\">NVT</dt><dd><p>Canonical ensemble.\nA statistical ensemble that represents a system in thermal equilibrium\nwith a heat bath at constant temperature (T), volume (V), and number of particles (N).</p></dd>", "a[href=\"#block-averages\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Block Averages<a class=\"headerlink\" href=\"#block-averages\" title=\"Link to this heading\">\u00b6</a></h2><p>As discussed in the <a class=\"reference internal\" href=\"block_averages.html\"><span class=\"std std-doc\">block averages</span></a> section,\nthe use of block averages is recommended for storing simulation data.\nIn the case of MD simulations, a safe initial block size is 10 time steps.\nUsually, the integration time step in MD is small enough to ensure that the fastest oscillations\nare sampled with 10 steps per period.\nIt is unlikely that transport properties are affected by the dynamics at shorter time scales,\nso a block size of 10 time steps is a good starting point.\nOnce you have performed an initial analysis of the data,\nyou can adjust (increase) the block size further to optimize the data storage.\nIf you take multiples of 10, it is easy to reprocess the initial block averages\nand convert them to averages over larger blocks.</p>", "a[href=\"../glossary.html#term-MD\"]": "<dt id=\"term-MD\">MD</dt><dd><p>Molecular dynamics.\nA computational method used to simulate the physical movements of atoms and molecules.</p></dd>", "a[href=\"#finite-size-effects\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Finite Size Effects<a class=\"headerlink\" href=\"#finite-size-effects\" title=\"Link to this heading\">\u00b6</a></h2><p>Transport properties derived from <a class=\"reference internal\" href=\"../glossary.html#term-MD\"><span class=\"xref std std-term\">MD</span></a> simulations of periodic systems\ncan be affected by finite-size effects.\nFinite-size effects are particularly significant for diffusion coefficients.\nThis systematic error is known to be proportional to <span class=\"math notranslate nohighlight\">\\(1/L\\)</span>,\nwhere <span class=\"math notranslate nohighlight\">\\(L\\)</span> is the length scale of the simulation box.\nThe <span class=\"math notranslate nohighlight\">\\(1/L\\)</span> dependence allows for extrapolation to infinite box size by linear regression\nor by applying analytical corrections, such as the Yeh-Hummer correction\n<span id=\"id1\">[<a class=\"reference internal\" href=\"../references.html#id3\" title=\"Edward J. Maginn, Richard A. Messerly, Daniel J. Carlson, Daniel R. Roe, and J. Richard Elliot. Best practices for computing transport properties 1. self-diffusivity and viscosity from equilibrium molecular dynamics [article v1.0]. Living J. Comput. Mol. Sci., 2(1):6324, 2020. doi:10.33011/livecoms.1.1.6324.\">MMC+20</a>, <a class=\"reference internal\" href=\"../references.html#id21\" title=\"In-Chul Yeh and Gerhard Hummer. System-size dependence of diffusion coefficients and viscosities from molecular dynamics simulations with periodic boundary conditions. J. Phys. Chem. B, 108(40):15873\u201315879, 2004. doi:10.1021/jp0477147.\">YH04</a>]</span>.</p>", "a[href=\"#recommendations-for-md-simulations\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Recommendations for MD Simulations<a class=\"headerlink\" href=\"#recommendations-for-md-simulations\" title=\"Link to this heading\">\u00b6</a></h1><h2>Finite Size Effects<a class=\"headerlink\" href=\"#finite-size-effects\" title=\"Link to this heading\">\u00b6</a></h2><p>Transport properties derived from <a class=\"reference internal\" href=\"../glossary.html#term-MD\"><span class=\"xref std std-term\">MD</span></a> simulations of periodic systems\ncan be affected by finite-size effects.\nFinite-size effects are particularly significant for diffusion coefficients.\nThis systematic error is known to be proportional to <span class=\"math notranslate nohighlight\">\\(1/L\\)</span>,\nwhere <span class=\"math notranslate nohighlight\">\\(L\\)</span> is the length scale of the simulation box.\nThe <span class=\"math notranslate nohighlight\">\\(1/L\\)</span> dependence allows for extrapolation to infinite box size by linear regression\nor by applying analytical corrections, such as the Yeh-Hummer correction\n<span id=\"id1\">[<a class=\"reference internal\" href=\"../references.html#id3\" title=\"Edward J. Maginn, Richard A. Messerly, Daniel J. Carlson, Daniel R. Roe, and J. Richard Elliot. Best practices for computing transport properties 1. self-diffusivity and viscosity from equilibrium molecular dynamics [article v1.0]. Living J. Comput. Mol. Sci., 2(1):6324, 2020. doi:10.33011/livecoms.1.1.6324.\">MMC+20</a>, <a class=\"reference internal\" href=\"../references.html#id21\" title=\"In-Chul Yeh and Gerhard Hummer. System-size dependence of diffusion coefficients and viscosities from molecular dynamics simulations with periodic boundary conditions. J. Phys. Chem. B, 108(40):15873\u201315879, 2004. doi:10.1021/jp0477147.\">YH04</a>]</span>.</p>", "a[href=\"../glossary.html#term-NVE\"]": "<dt id=\"term-NVE\">NVE</dt><dd><p>Microcanonical ensemble.\nA statistical ensemble that represents a closed system\nwith fixed energy (E), volume (V), and number of particles (N).</p></dd>", "a[href=\"#thermostat-and-barostat-settings\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Thermostat and Barostat Settings<a class=\"headerlink\" href=\"#thermostat-and-barostat-settings\" title=\"Link to this heading\">\u00b6</a></h2><p>For the equilibration runs discussed above,\nthe choice of thermostat and barostat time constants is not critical,\nas long as the algorithms are valid (i.e., no Berendsen thermo- or barostats)\nand the simulations are long enough to allow for full equilibration of the system\nwithin the equilibration run.\nA local thermostat can be used to make the equilibration more efficient.</p><p>In some cases, e.g., to remain consistent with historical results,\nor because some of the challenges of NVE simulations cannot be overcome,\none may still prefer to run production runs for transport properties in the NVT ensemble.\nWhen you start a new project, however, always consider using NVE production runs.\nIf you must use NVT, studies suggest that well-tuned NVT simulations\nyield comparable results to NVE simulations\n<span id=\"id3\">[<a class=\"reference internal\" href=\"../references.html#id27\" title=\"Joseph E. Basconi and Michael R. Shirts. Effects of temperature control algorithms on transport properties and kinetics in molecular dynamics simulations. J. Chem. Theory Comput., 9(7):2887\u20132899, 2013. doi:10.1021/ct400109a.\">BS13</a>, <a class=\"reference internal\" href=\"../references.html#id5\" title=\"George S. Fanourgakis, J. S. Medina, and R. Prosmiti. Determining the bulk viscosity of rigid water models. J. Phys. Chem. A, 116(10):2564\u20132570, March 2012. URL: http://dx.doi.org/10.1021/jp211952y, doi:10.1021/jp211952y.\">FMP12</a>, <a class=\"reference internal\" href=\"../references.html#id4\" title=\"Qia Ke, Xiaoting Gong, Shouwei Liao, Chongxiong Duan, and Libo Li. Effects of thermostats/barostats on physical properties of liquids by molecular dynamics simulations. J. Mol. Liq., 365:120116, November 2022. URL: http://dx.doi.org/10.1016/j.molliq.2022.120116, doi:10.1016/j.molliq.2022.120116.\">KGL+22</a>]</span>.\nBasconi <em>et al.</em> recommended using a thermostat with slow relaxation times, global coupling,\nand continuous rescaling (as opposed to random force contributions) <span id=\"id4\">[<a class=\"reference internal\" href=\"../references.html#id27\" title=\"Joseph E. Basconi and Michael R. Shirts. Effects of temperature control algorithms on transport properties and kinetics in molecular dynamics simulations. J. Chem. Theory Comput., 9(7):2887\u20132899, 2013. doi:10.1021/ct400109a.\">BS13</a>]</span>.\nThese are typically the opposite of the settings that are used for efficient equilibration runs.\nA drawback of slow relaxation times is that longer simulations are required\nto fully sample the correct ensemble.</p>", "a[href=\"#choice-of-ensemble\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Choice of Ensemble<a class=\"headerlink\" href=\"#choice-of-ensemble\" title=\"Link to this heading\">\u00b6</a></h2><p>The <a class=\"reference internal\" href=\"../glossary.html#term-NVE\"><span class=\"xref std std-term\">NVE</span></a> ensemble is generally recommended for computing transport coefficients,\nas thermostats and barostats (used for simulations in the <a class=\"reference internal\" href=\"../glossary.html#term-NVT\"><span class=\"xref std std-term\">NVT</span></a> and <a class=\"reference internal\" href=\"../glossary.html#term-NpT\"><span class=\"xref std std-term\">NpT</span></a> ensembles)\ncan interfere with system dynamics and introduce bias in transport properties\n<span id=\"id2\">[<a class=\"reference internal\" href=\"../references.html#id3\" title=\"Edward J. Maginn, Richard A. Messerly, Daniel J. Carlson, Daniel R. Roe, and J. Richard Elliot. Best practices for computing transport properties 1. self-diffusivity and viscosity from equilibrium molecular dynamics [article v1.0]. Living J. Comput. Mol. Sci., 2(1):6324, 2020. doi:10.33011/livecoms.1.1.6324.\">MMC+20</a>]</span>.\nFor production runs, the NpT ensemble has an additional drawback:\nbarostats introduce coordinate scaling,\nwhich directly perturbs the atomic mean squared displacements.</p><p>A good approach is to first equilibrate the system using NVT or NpT,\nbefore switching to NVE for transport property calculations.\nThe main difficulty is that a single NVE simulation does not fully represent an NVT or NpT ensemble,\neven if the average temperature and pressure match perfectly.\n(They become equivalent in the thermodynamic limit, but we always simulate finite systems.)</p>", "a[href=\"../glossary.html#term-NpT\"]": "<dt id=\"term-NpT\">NpT</dt><dd><p>Isothermal-isobaric ensemble.\nA statistical ensemble that represents a system in thermal equilibrium\nwith a heat bath at constant temperature (T), pressure (p), and number of particles (N).</p></dd>", "a[href=\"block_averages.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Reducing Storage Requirements with Block Averages<a class=\"headerlink\" href=\"#reducing-storage-requirements-with-block-averages\" title=\"Link to this heading\">\u00b6</a></h1><p>When computer simulations generate time-dependent data,\nthey often use a discretization of the time axis with a resolution (much) higher\nthan needed for computing the autocorrelation integral with STACIE.\nStoring (and processing) all these data may require excessive resources.\nTo reduce the amount of data, we recommend taking block averages.\nThese block averages form a new time series with a time step equal to the block size\nmultiplied by the original time step.\nThey reduce storage requirements by a factor equal to the block size.\nIf the program generating the sequences does not support block averages,\nyou can use <a class=\"reference internal\" href=\"../apidocs/stacie.utils.html#stacie.utils.block_average\" title=\"stacie.utils.block_average\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">stacie.utils.block_average()</span></code></a>.</p><p>If the blocks are sufficiently small compared to the decay rate of the autocorrelation function,\nSTACIE will produce virtually the same results.\nThe effect of block averages can be understood by inserting them into the discrete power spectrum,\nusing STACIE\u2019s normalization convention to obtain the proper zero-frequency limit.\nLet <span class=\"math notranslate nohighlight\">\\(\\hat{a}_\\ell\\)</span> be the <span class=\"math notranslate nohighlight\">\\(\\ell\\)</span>\u2019th block average of <span class=\"math notranslate nohighlight\">\\(L\\)</span> blocks with block size <span class=\"math notranslate nohighlight\">\\(B\\)</span>.\nWe can start from the power spectrum of the original sequence, <span class=\"math notranslate nohighlight\">\\(\\hat{x}_n\\)</span>,\nand then introduce approximations to rewrite it in terms of the block averages:</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
