selector_to_html = {"a[href=\"data_sufficiency.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">How to Prepare Sufficient Inputs for STACIE?<a class=\"headerlink\" href=\"#how-to-prepare-sufficient-inputs-for-stacie\" title=\"Link to this heading\">\u00b6</a></h1><p>This section explains how to achieve a desired relative error <span class=\"math notranslate nohighlight\">\\(\\epsilon_\\text{rel}\\)</span>\nof the autocorrelation integral estimate, <span class=\"math notranslate nohighlight\">\\(\\hat{\\mathcal{I}}\\)</span>.\nThe preparation of sufficient inputs consists of two steps:</p>", "a[href=\"molecular_dynamics.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Recommendations for MD Simulations<a class=\"headerlink\" href=\"#recommendations-for-md-simulations\" title=\"Link to this heading\">\u00b6</a></h1><h2>Finite Size Effects<a class=\"headerlink\" href=\"#finite-size-effects\" title=\"Link to this heading\">\u00b6</a></h2><p>Transport properties derived from <a class=\"reference internal\" href=\"../glossary.html#term-MD\"><span class=\"xref std std-term\">MD</span></a> simulations of periodic systems\ncan be affected by finite-size effects.\nFinite-size effects are particularly significant for diffusion coefficients.\nThis systematic error is known to be proportional to <span class=\"math notranslate nohighlight\">\\(1/L\\)</span>,\nwhere <span class=\"math notranslate nohighlight\">\\(L\\)</span> is the length scale of the simulation box.\nThe <span class=\"math notranslate nohighlight\">\\(1/L\\)</span> dependence allows for extrapolation to infinite box size by linear regression\nor by applying analytical corrections, such as the Yeh-Hummer correction\n<span id=\"id1\">[<a class=\"reference internal\" href=\"../references.html#id3\" title=\"Edward J. Maginn, Richard A. Messerly, Daniel J. Carlson, Daniel R. Roe, and J. Richard Elliot. Best practices for computing transport properties 1. self-diffusivity and viscosity from equilibrium molecular dynamics [article v1.0]. Living J. Comput. Mol. Sci., 2(1):6324, 2020. doi:10.33011/livecoms.1.1.6324.\">MMC+20</a>, <a class=\"reference internal\" href=\"../references.html#id21\" title=\"In-Chul Yeh and Gerhard Hummer. System-size dependence of diffusion coefficients and viscosities from molecular dynamics simulations with periodic boundary conditions. J. Phys. Chem. B, 108(40):15873\u201315879, 2004. doi:10.1021/jp0477147.\">YH04</a>]</span>.</p>", "a[href=\"#preparing-inputs\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Preparing Inputs<a class=\"headerlink\" href=\"#preparing-inputs\" title=\"Link to this heading\">\u00b6</a></h1><p>This section explains how to prepare input sequences for STACIE to ensure high-quality results.\nIt consists of three parts:</p>", "a[href=\"block_averages.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Reducing Storage Requirements with Block Averages<a class=\"headerlink\" href=\"#reducing-storage-requirements-with-block-averages\" title=\"Link to this heading\">\u00b6</a></h1><p>When computer simulations generate time-dependent data,\nthey often use a discretization of the time axis with a resolution (much) higher\nthan needed for computing the autocorrelation integral with STACIE.\nStoring (and processing) all these data may require excessive resources.\nTo reduce the amount of data, we recommend taking block averages.\nThese block averages form a new time series with a time step equal to the block size\nmultiplied by the original time step.\nThey reduce storage requirements by a factor equal to the block size.\nIf the program generating the sequences does not support block averages,\nyou can use <a class=\"reference internal\" href=\"../apidocs/stacie.utils.html#stacie.utils.block_average\" title=\"stacie.utils.block_average\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">stacie.utils.block_average()</span></code></a>.</p><p>If the blocks are sufficiently small compared to the decay rate of the autocorrelation function,\nSTACIE will produce virtually the same results.\nThe effect of block averages can be understood by inserting them into the discrete power spectrum,\nusing STACIE\u2019s normalization convention to obtain the proper zero-frequency limit.\nLet <span class=\"math notranslate nohighlight\">\\(\\hat{a}_\\ell\\)</span> be the <span class=\"math notranslate nohighlight\">\\(\\ell\\)</span>\u2019th block average of <span class=\"math notranslate nohighlight\">\\(L\\)</span> blocks with block size <span class=\"math notranslate nohighlight\">\\(B\\)</span>.\nWe can start from the power spectrum of the original sequence, <span class=\"math notranslate nohighlight\">\\(\\hat{x}_n\\)</span>,\nand then introduce approximations to rewrite it in terms of the block averages:</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
